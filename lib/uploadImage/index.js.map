{"version":3,"sources":["../../src/uploadImage/index.js"],"names":["TableDrawer","state","previewVisible","previewImage","fileList","loading","handleCancel","setState","handlePreview","file","url","thumbUrl","handleRemove","fileLists","isLt2M","size","message","error","nextProps","props","imageUrl","list","uid","name","status","nextState","uploadButton","res","success","data","handleUploadImg","length","width","React","Component"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * @title: 表单中上传图片的公用组件，只支持上传一张，且是“困”模式的上传\r\n * @author: 雏田\r\n * @version: 1.0.0\r\n * @time: 2018-08-17\r\n * @param {[string]}      [url]           [上传的api路径]\r\n * @param {[string]}      [name]          [form表单中的name]\r\n * @param {[string]}      [imageUrl]      [默认图片,常用于编辑]\r\n * @param {[function]}    [uploadImage]   [上传成功的回调函数，可不填]\r\n  * 调用方法（含formItem的图片校验方法）：\r\n  * <FormItem {...formItemLayout} label='广告图片' extra='推荐尺寸750*150'>\r\n      {getFieldDecorator('pic', {\r\n        rules: [{\r\n          validator: (rule, value, callback)=>{\r\n            let hasPic = this.state.hasPic;\r\n            if(!hasPic){\r\n              callback('请上传图片');\r\n            }\r\n            callback();\r\n          },                   \r\n        }],\r\n      })(\r\n        <UploadImage\r\n          url='//jsonplaceholder.typicode.com/posts/'\r\n          name='pic'\r\n          imageUrl={defaultValues && defaultValues.pic || ''}\r\n          uploadImage= {(imageUrl)=>{\r\n            this.setState({\r\n              hasPic: imageUrl\r\n            }) \r\n          }}\r\n        />                \r\n      )}\r\n    </FormItem>\r\n */\r\nimport React from 'react';\r\nimport { \r\n  message,\r\n  Icon,\r\n  Upload,\r\n  Modal,\r\n} from 'antd';\r\nimport { is, fromJS } from 'immutable';\r\n\r\nexport default class TableDrawer extends React.Component {  \r\n  state = {\r\n    previewVisible: false, // 是否显示大图\r\n    previewImage: '', // 大图的地址\r\n    fileList: [], // 显示的缩略图地址\r\n    loading: false,\r\n  };\r\n  /**\r\n   * [beforeUpload 判断上传图片]\r\n   * @param  {[type]} file [description]\r\n   * @return {[type]}      [description]\r\n   */\r\n  beforeUpload(file) {    \r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('图片太大超过2MB啦!');\r\n    }\r\n    return isLt2M;\r\n  }\r\n  /**\r\n   * [关闭缩略图]\r\n   * @return {[type]} [description]\r\n   */\r\n  handleCancel = () => this.setState({previewVisible: false})\r\n  /**\r\n   * [查看大图]\r\n   * @param  {[type]} file [description]\r\n   */\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  }\r\n  /**\r\n   * [删除照片]\r\n   */\r\n  handleRemove= () => {\r\n    let fileLists=[];\r\n    this.setState({\r\n      fileList: fileLists,\r\n    });\r\n  }\r\n  /**\r\n   * [componentWillReceiveProps 子组件更新子组件]\r\n   * @param  {[type]} nextProps [description]\r\n   * @return {[type]}           [description]\r\n   */\r\n  componentWillReceiveProps(nextProps){\r\n    if(!is(fromJS(this.props), fromJS(nextProps)) && nextProps.imageUrl && !this.state.imageUrl){ \r\n      let list=[{\r\n        uid: -1,\r\n        name: 'xxx.png',\r\n        status: 'done',\r\n        url: nextProps.imageUrl,\r\n      }];\r\n      this.setState({\r\n        fileList: list,\r\n      });  \r\n    }\r\n  } \r\n  /**\r\n   * [shouldComponentUpdate 如果state值没有改变时就算调用了setState方法，页面也不会重新渲染]\r\n   * @param  {[type]} nextProps [description]\r\n   * @param  {[type]} nextState [description]\r\n   * @return {[type]}           [description]\r\n   */\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return !is(fromJS(this.props), fromJS(nextProps)) || !is(fromJS(this.state),fromJS(nextState))\r\n  } \r\n  /**\r\n   * [render description]\r\n   * @return {[type]} [description]\r\n   */\r\n  render() {\r\n    const {previewVisible, previewImage, fileList} = this.state;\r\n    const {url}=this.props;   \r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n        <div className=\"ant-upload-text\">上传图片</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action={url}\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          withCredentials={true}\r\n          onSuccess={(res)=>{\r\n            if (res.success) {\r\n              let list=[{\r\n                uid: -1,\r\n                name: 'xxx.png',\r\n                status: 'done',\r\n                url: res.data,\r\n              }];\r\n              this.setState({\r\n                fileList: list,\r\n                loading: false,                \r\n              });\r\n              this.props.handleUploadImg(res.data);\r\n            } else {\r\n              message.error(res.message);\r\n            }\r\n          }}\r\n          onPreview={this.handlePreview}\r\n          onRemove={this.handleRemove}\r\n          onChange={()=>{\r\n            this.setState({               \r\n              loading: true,                \r\n            });\r\n          }}\r\n        >\r\n          {fileList.length >= 1 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{width: '100%'}} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}"]}