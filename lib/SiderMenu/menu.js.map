{"version":3,"sources":["../../src/SiderMenu/menu.js"],"names":["SubMenu","Menu","SiderMenuWrapper","props","selectedKeys","menuProps","menu","path","isTop","theme","handleOpen","navTheme","map","item","code","icon","name","subMenus","value","url","React","PureComponent"],"mappings":";;;;;;;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,UAAUC,WAAKD,OAArB;;IACqBE,gB;;;;;;;;;;;6BACX;AAAA,mBACkE,KAAKC,KADvE;AAAA,UACCC,YADD,UACCA,YADD;AAAA,UACeC,SADf,UACeA,SADf;AAAA,UAC0BC,IAD1B,UAC0BA,IAD1B;AAAA,UACgCC,IADhC,UACgCA,IADhC;AAAA,UACsCC,KADtC,UACsCA,KADtC;AAAA,UAC6CC,KAD7C,UAC6CA,KAD7C;AAAA,UACoDC,UADpD,UACoDA,UADpD;;AAEN,aAAQ;AAAC,kBAAD;AAAA;AACN,eAAI,MADE;AAEN,uBAAUD,MAAME,QAAN,IAAkB,MAA5B,CAFM;AAGN,sBAASH,QAAQ,YAAR,GAAuB,QAAhC,CAHM;AAIN,wBAAc,CAACJ,YAAD,CAJR;AAKN,wBAAcM;AALR,WAMFL,SANE;AASNC,gBAAQA,KAAKM,GAAL,CAAS,UAACC,IAAD,EAAU;AACzB,iBACE;AAAC,mBAAD;AAAA;AACE,mBAAKA,KAAKC,IADZ;AAEE,qBAAO;AAAA;AAAA;AAAM,8CAAC,UAAD,IAAM,MAAMD,KAAKE,IAAjB,GAAN;AAA8B;AAAA;AAAA;AAAOF,uBAAKG;AAAZ;AAA9B;AAFT;AAKEH,iBAAKI,QAAL,IAAiBJ,KAAKI,QAAL,CAAcL,GAAd,CAAkB,UAACM,KAAD,EAAS;AAC1C,qBACA;AAAC,0BAAD,CAAM,IAAN;AAAA,kBAAW,KAAKA,MAAMJ,IAAtB;AAEII,sBAAMC,GAAN,KAAcZ,IAAd,GACC;AAAC,sCAAD;AAAA,oBAAM,SAAOW,MAAMC,GAAnB;AAA2BD,wBAAMF;AAAjC,iBADD,GAEAE,MAAMF;AAJV,eADA;AAQD,aATgB;AALnB,WADF;AAmBD,SApBO;AATF,OAAR;AAgCD;;;;EAnC2CI,gBAAMC,a;;kBAA/BnB,gB","file":"menu.js","sourcesContent":["\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Menu, Icon } from 'antd';\r\nimport './index.less';\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nexport default class SiderMenuWrapper extends React.PureComponent {  \r\n  render(){\r\n    const {selectedKeys, menuProps, menu, path, isTop, theme, handleOpen} = this.props;\r\n    return (<Menu\r\n      key=\"Menu\"\r\n      theme={`${theme.navTheme || 'dark'}`}\r\n      mode={`${isTop ? 'horizontal' : 'inline'}`}                      \r\n      selectedKeys={[selectedKeys]}                \r\n      onOpenChange={handleOpen}\r\n      {...menuProps}\r\n    >\r\n    {\r\n      menu && menu.map((item) => {\r\n        return (\r\n          <SubMenu\r\n            key={item.code}\r\n            title={<span><Icon type={item.icon}/><span>{item.name}</span></span>}                  \r\n          >\r\n          {\r\n            item.subMenus && item.subMenus.map((value)=>{                    \r\n              return (\r\n              <Menu.Item key={value.code}>\r\n                {\r\n                  value.url !== path ?\r\n                  (<Link to={`${value.url}`}>{value.name}</Link>) :\r\n                  value.name\r\n                }\r\n              </Menu.Item>)\r\n            })\r\n          }                               \r\n          </SubMenu>\r\n        )\r\n      })\r\n    }         \r\n    </Menu>)\r\n  }\r\n}\r\n"]}