{"version":3,"sources":["../../src/pageHead/index.js"],"names":["TabPane","Tabs","PageHead","props","nav","title","logo","action","content","extraContent","tabList","tabDefaultActiveKey","tabActiveKey","tabBarExtraContent","onTabChange","activeKeyProps","undefined","defaultActiveKey","activeKey","length","key","map","item","tab","React","Component"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;IACQA,O,GAAYC,U,CAAZD,O;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BqBE,Q;;;;;;;;;;;6BACV;AAAA,mBAaH,KAAKC,KAbF;AAAA,UAELC,GAFK,UAELA,GAFK;AAAA,UAGLC,KAHK,UAGLA,KAHK;AAAA,UAILC,IAJK,UAILA,IAJK;AAAA,UAKLC,MALK,UAKLA,MALK;AAAA,UAMLC,OANK,UAMLA,OANK;AAAA,UAOLC,YAPK,UAOLA,YAPK;AAAA,UAQLC,OARK,UAQLA,OARK;AAAA,UASLC,mBATK,UASLA,mBATK;AAAA,UAULC,YAVK,UAULA,YAVK;AAAA,UAWLC,kBAXK,UAWLA,kBAXK;AAAA,UAYLC,WAZK,UAYLA,WAZK;;AAcP,UAAMC,iBAAiB,EAAvB;AACA,UAAIJ,wBAAwBK,SAA5B,EAAuC;AACrCD,uBAAeE,gBAAf,GAAkCN,mBAAlC;AACD;AACD,UAAIC,iBAAiBI,SAArB,EAAgC;AAC9BD,uBAAeG,SAAf,GAA2BN,YAA3B;AACD;AACD,aACE;AAAA;AAAA,UAAK,WAAU,YAAf;AACER,eAAO,8BAAC,eAAD,IAAY,MAAMA,GAAlB,GADT;AAEE;AAAA;AAAA,YAAK,WAAU,QAAf;AACGE,kBAAQ;AAAA;AAAA,cAAK,WAAU,MAAf;AAAuBA;AAAvB,WADX;AAEE;AAAA;AAAA,cAAK,WAAU,MAAf;AACE;AAAA;AAAA,gBAAK,WAAU,KAAf;AACGD,uBAAS;AAAA;AAAA,kBAAI,WAAU,OAAd;AAAuBA;AAAvB,eADZ;AAEGE,wBAAU;AAAA;AAAA,kBAAK,WAAU,QAAf;AAAyBA;AAAzB;AAFb,aADF;AAKE;AAAA;AAAA,gBAAK,WAAU,KAAf;AACGC,yBAAW;AAAA;AAAA,kBAAK,WAAU,SAAf;AAA0BA;AAA1B,eADd;AAEGC,8BAAgB;AAAA;AAAA,kBAAK,WAAU,cAAf;AAA+BA;AAA/B;AAFnB;AALF;AAFF,SAFF;AAeGC,mBACCA,QAAQS,MADT,IAEG;AAAC,oBAAD;AAAA;AACE,uBAAU;AADZ,aAEMJ,cAFN;AAGE,sBAAU,kBAACK,GAAD,EAAS;AACjB,kBAAIN,WAAJ,EAAiB;AACfA,4BAAYM,GAAZ;AACD;AACF,aAPH;AAQE,gCAAoBP;AARtB;AAUGH,kBAAQW,GAAR,CAAY;AAAA,mBAAQ,8BAAC,OAAD,IAAS,KAAKC,KAAKC,GAAnB,EAAwB,KAAKD,KAAKF,GAAlC,GAAR;AAAA,WAAZ;AAVH;AAjBN,OADF;AAiCD;;;;EAvDmCI,gBAAMC,S;;kBAAvBvB,Q","file":"index.js","sourcesContent":["import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport Breadcrumb from '../breadcrumb/index';\r\nimport './index.less';\r\nconst { TabPane } = Tabs;\r\n/**\r\n * @describe:页面通用头部。含：面包屑，标题，和简单说明\r\n * @auther: 雏田\r\n * @time: 2018-08-02\r\n * nav: 面包屑导航，详细代码看@/components/breadcrumb/index，传入的数据格式：\r\n * const breadMenu = [{\r\n *   path: 'index', // 路由路径。不想跳转则为空。\r\n *   title: '首页' // 显示文字\r\n * }]\r\n * title: 基本样式的文字。\r\n * logo: 前置图片地址\r\n * action: 与title同一行的右侧按钮配置项，自己定义好传过来，这里只做展示\r\n * content：基本样式的详细说明。也可以改写为自己想要的样子，直接传过来只做展示\r\n * extraContent： 自定义右侧样式。定义好之后直接传过来，这里只做展示\r\n * tabList: 卡片下的tab切换，数据格式：\r\n * const tabList = [{\r\n *   key: 'detail',\r\n *   tab: '详情',\r\n * }, {\r\n *   key: 'rule',\r\n *   tab: '规则',\r\n * },]\r\n * tabDefaultActiveKey: // 默认激活的tab面板的key\r\n * tabActiveKey: // 当前激活 tab 面板的 key\r\n * tabBarExtraContent: //tab bar 上额外的元素\r\n * onTabChange: tab切换的回到函数\r\n */\r\nexport default class PageHead extends React.Component {\r\n  render() {    \r\n    const {\r\n      nav,\r\n      title,\r\n      logo,\r\n      action,\r\n      content,\r\n      extraContent,\r\n      tabList,\r\n      tabDefaultActiveKey,\r\n      tabActiveKey,\r\n      tabBarExtraContent,\r\n      onTabChange,\r\n    } = this.props;\r\n    const activeKeyProps = {};\r\n    if (tabDefaultActiveKey !== undefined) {\r\n      activeKeyProps.defaultActiveKey = tabDefaultActiveKey;\r\n    }\r\n    if (tabActiveKey !== undefined) {\r\n      activeKeyProps.activeKey = tabActiveKey;\r\n    }   \r\n    return (\r\n      <div className='pageHeader'>        \r\n       {nav && <Breadcrumb menu={nav} />}\r\n        <div className='detail'>\r\n          {logo && <div className='logo'>{logo}</div>}\r\n          <div className='main'>\r\n            <div className='row'>\r\n              {title && <h1 className='title'>{title}</h1>}\r\n              {action && <div className='action'>{action}</div>}\r\n            </div>\r\n            <div className='row'>\r\n              {content && <div className='content'>{content}</div>}\r\n              {extraContent && <div className='extraContent'>{extraContent}</div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {tabList &&\r\n          tabList.length && (\r\n            <Tabs\r\n              className='tabs'\r\n              {...activeKeyProps}\r\n              onChange={(key) => {                \r\n                if (onTabChange) {\r\n                  onTabChange(key);\r\n                }\r\n              }}\r\n              tabBarExtraContent={tabBarExtraContent}\r\n            >\r\n              {tabList.map(item => <TabPane tab={item.tab} key={item.key} />)}\r\n            </Tabs>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n"]}