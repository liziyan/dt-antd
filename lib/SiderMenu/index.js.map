{"version":3,"sources":["../../src/SiderMenu/index.js"],"names":["Header","Layout","Sider","Content","SubMenu","Menu","SiderDemo","state","collapsed","path","menu","openKeys","selectedKeys","toggle","setState","getPageChange","width","document","body","offsetWidth","nextProps","nextState","props","getUrl","siderMenu","that","window","onresize","location","href","split","filter","item","subMenus","indexOf","val","url","code","children","logo","title","pageHead","user","userName","userPhoto","logOut","userChange","userItem","other","_menu","menuProps","headerWidth","height","logos","padding","length","map","icon","name","value","background","left","minHeight","paddingLeft","paddingTop","React","Component"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { is, fromJS } from 'immutable';\r\nimport { Layout, Menu, Icon, Dropdown, Avatar } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport logos from './logo.png';\r\n/**\r\n * 整体框架组件，结构：左上下模式，左边分title和菜单，上边分左(收起展开按钮)和右(登陆员信息)\r\n * @author: 雏田\r\n * @time: 2018-09-18\r\n * 调用方法：\r\n * import {PageLayout} from 'DT-antd';\r\n * const path = {\r\n *   children,    // 【必填】 框架的中间部分 \r\n *   siderMenu: { // 【必填】 框架的左边部分\r\n *     logo,      // 【选填】 左侧头部logo，默认为公交云logo\r\n *     title,     // 【必填】 左侧头部文字\r\n *     menu,      // 【必填】 左侧菜单栏数据，有固定格式，固定格式见最上面组件说明\r\n *   },\r\n *   pageHead: {      // 【必填】 顶部分的参数       \r\n *     user: {        // 【必填】 最右侧用户头像+用户名+下拉部分的参数（如果启用了userChange则选填）\r\n *       userName,    // 【必填】 用户名（如果启用了userChange则选填）\r\n *       userPhoto,   // 【选填】 用户头像\r\n *       logOut,      // 【必填】 退出登陆的回调方法，下拉菜单默认只有一个退出登陆（如果启用了userItem则选填）\r\n *       userChange,  // 【选填】 object,不满足用户名+头像模式的自定义书写\r\n *       userItem,    // 【选填】 object，不满足只有退出登陆的下拉  菜单模式而自定义书写\r\n *     },\r\n *     other, // 【选填】 头部右边默认只有一个头像+用户名，要加其它东西在这里自定义书写，会累加\r\n *   }\r\n * }\r\n * <PageLayout {...path} />\r\n *\r\n * 其中左侧菜单栏为了兼容主数据已定的返回模式，如果返回格式不一致，请对数据重新处理为以下格式：\r\n * let menu = [{\r\n *    code: 'userManage', // 识别的主键，不能重复\r\n *    name: '用户管理', // 标题\r\n *    icon: 'user', // 图标\r\n *    subMenus: [{ // 二级菜单目录\r\n *      code: 'userManage.userManage', // 一级主键.二级主键\r\n *      name: '用户列表', // 标题\r\n *      url: '/userManage' // 访问的路由路径，为了兼容主数据，要有/\r\n *    }]\r\n *  }];\r\n *\r\n * 另外为了方便页面指向左侧菜单的选中和展开，在定义页面其它路由时,如新增编辑详情等，页面路由定义格式为：\r\n * {对应父级的path[也就是菜单栏menu中的url字段]}/你要定义的路由(如新增add，编辑edit/:id,详情detail/:id等)\r\n */\r\nconst { Header, Sider, Content } = Layout;\r\nconst SubMenu = Menu.SubMenu;\r\nexport default class SiderDemo extends React.Component {\r\n  state = {\r\n    collapsed: false, // 左侧是否缩小\r\n    path: null, // 当前路由    \r\n    menu: null,\r\n    openKeys: '', // 展开的key\r\n    selectedKeys: '', // 选中的Key\r\n  };  \r\n  /**\r\n   * [点击展开或缩小左侧的事件]\r\n   * @return {[type]} [description]\r\n   */\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  /**\r\n   * [shouldComponentUpdate 如果state值没有改变时就算调用了setState方法，页面也不会重新渲染]\r\n   * @param  {[type]} nextProps [description]\r\n   * @param  {[type]} nextState [description]\r\n   * @return {[type]}           [description]\r\n   */\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(!is(fromJS(this.props), fromJS(nextProps))) {\r\n      this.getUrl(nextProps.siderMenu.menu);\r\n    }    \r\n    return !is(fromJS(this.props), fromJS(nextProps)) || !is(fromJS(this.state),fromJS(nextState))\r\n  }\r\n  /**\r\n   * [componentDidMount 加载render方法之前]\r\n   * @return {[type]} [description]\r\n   */\r\n  componentDidMount(){\r\n    let that = this;   \r\n    this.getPageChange();\r\n    window.onresize = function(){\r\n      that.getPageChange();\r\n    };\r\n  }\r\n  /**\r\n   * [获取窗体的改变]\r\n   * @return {[type]} [description]\r\n   */\r\n  getPageChange=()=>{\r\n    let width = document.body.offsetWidth;\r\n    if(width > 1366 && this.state.collapsed) {\r\n      this.setState({\r\n        collapsed: false\r\n      })\r\n    } else if(width <= 1366 && !this.state.collapsed) {\r\n      this.setState({\r\n        collapsed: true\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * [getUrl 获取当前url的路由地址，常用于浏览器返回箭之后的左侧菜单选中效果]\r\n   * 说明：\r\n   * 目前框架是按照主数据的返回菜单来定义的，主数据的菜单格式请看mockdata里的模拟数据格式\r\n   * 菜单选中方式获取步骤如下：\r\n   * 1. 获取url的路由path\r\n   * 2. 和menu做比较，得到url字段中含有path的code来选中左侧效果\r\n   * 3. 获得最外层的code来展开一级目录。\r\n   *\r\n   * 所以，在定义路由时，要按照数据库返回的数据格式来定义。比如：\r\n   * 1. 用户列表的路由为：/userManage\r\n   * 2. 那他对应下的详情则应该为：/userManage/detail/:id\r\n   * 3. 对应下的新增则应该为：/userManage/add\r\n   *\r\n   * 只有这样定义，才能保证左侧菜单的展开和选中是一一对应的\r\n   */\r\n  getUrl(menu){    \r\n    // 获取当前路由\r\n    let path = window.location.href.split('#')[1];    \r\n    if(!path || path === '/') return;\r\n    // 根据path获取menu对应的item    \r\n    let openKeys; // 展开的一级key   \r\n    let selectedKeys; // 选中的二级key\r\n    menu && menu.filter(item=>{     \r\n      item.subMenus && item.subMenus.filter(val=>{ \r\n        if(path.indexOf(val.url) > -1){\r\n          openKeys = item.code; \r\n          selectedKeys = val.code;\r\n        }     \r\n        return val;\r\n      });\r\n      return item;\r\n    });    \r\n    this.setState({\r\n      openKeys,\r\n      selectedKeys\r\n    });\r\n  }\r\n  /**\r\n   * [render description]\r\n   * @return {[type]} [description]\r\n   */\r\n  render() {\r\n    const {\r\n      children, // 框架的中间部分（必填） \r\n      siderMenu: { // 框架的左边部分\r\n        logo, // 左侧头部logo，默认为公交云logo\r\n        title,// 左侧头部文字（必填）\r\n        menu, // 左侧菜单栏数据，有固定格式，固定格式见最上面组件说明（必填）\r\n      },\r\n      pageHead: { // 顶部分的参数       \r\n        user: { // 最右侧用户头像+用户名+下拉部分的参数\r\n          userName, // 用户名(必填)\r\n          userPhoto, // 用户头像\r\n          logOut, // 退出登陆的回调方法(必填)，下拉菜单默认只有一个退出登陆\r\n          userChange, // object,不满足用户名+头像模式的自定义书写\r\n          userItem, // object，不满足只有退出登陆的下拉菜单模式而自定义书写\r\n        },\r\n        other, // 头部右边默认只有一个头像+用户名，要加其它东西在这里自定义书写，会累加\r\n      }\r\n    } = this.props;   \r\n    const {path, selectedKeys, collapsed, openKeys} = this.state;\r\n    // 用户名对应的下拉菜单\r\n    const _menu = userItem ? userItem : (\r\n      <Menu className='header_menu'>        \r\n        <Menu.Item key=\"logout\" onClick={()=>{if(logOut) logOut();}}>\r\n          <Icon type=\"logout\" />退出登录\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n    // 如果初始或者切换时是隐藏模式，则不选中当前选中的key\r\n    const menuProps = collapsed ? {} : {openKeys: [openKeys]};\r\n    const headerWidth = collapsed ? 80 : 256;\r\n    return (\r\n      <Layout style={{height: '100%'}}>\r\n        <Sider\r\n          trigger={null}\r\n          collapsible\r\n          width={256}\r\n          collapsed={collapsed}\r\n          className='navSider fixSiderbar scroll'\r\n        >\r\n          <div className='navLogo' key=\"logo\">\r\n            <Link to=\"/\">\r\n              <img src={logo || logos} alt=\"logo\" />\r\n              <h1>{title || '管理系统'}</h1>\r\n            </Link>\r\n          </div>\r\n          <Menu\r\n            key=\"Menu\"\r\n            theme=\"dark\"\r\n            mode=\"inline\"\r\n            style={{padding: '16px 0'}}            \r\n            selectedKeys={[selectedKeys]}\r\n            // openKeys = {[openKeys]}\r\n            onOpenChange={(openKeys) => {\r\n              this.setState({\r\n                openKeys: openKeys[openKeys.length - 1],\r\n              })\r\n            }}\r\n            {...menuProps}\r\n          >\r\n          {\r\n            menu && menu.map((item) => {\r\n              return (\r\n                <SubMenu\r\n                  key={item.code}\r\n                  title={<span><Icon type={item.icon}/><span>{item.name}</span></span>}                  \r\n                >\r\n                {\r\n                  item.subMenus && item.subMenus.map((value)=>{                    \r\n                    return (\r\n                    <Menu.Item key={value.code}>\r\n                      {\r\n                        value.url !== path ?\r\n                        (<Link to={`${value.url}`}>{value.name}</Link>) :\r\n                        value.name\r\n                      }\r\n                    </Menu.Item>)\r\n                  })\r\n                }                               \r\n                </SubMenu>\r\n              )\r\n            })\r\n          }         \r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header className=\"layoutHeader\" style={{\r\n            background: '#fff',\r\n            padding: '0 12px 0 0',\r\n            width: `calc(100% - ${headerWidth}px)`,\r\n            left: `${headerWidth}px`, \r\n          }}>\r\n            <Icon\r\n              className=\"trigger\"\r\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n              onClick={this.toggle}\r\n            />\r\n            <div className='right'>\r\n              {other }\r\n              <Dropdown overlay={_menu}>\r\n                {\r\n                  userChange || (<span className='action'>\r\n                    <Avatar size=\"small\" className='avatar' src={userPhoto || 'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'} />\r\n                    <span className=''>{userName ? userName : '用户名'}</span>\r\n                  </span>)\r\n                }                \r\n              </Dropdown>\r\n            </div>\r\n          </Header>\r\n          <Content style={{background: '#f5f5f5', minHeight: 280, paddingLeft: `${headerWidth}px`, paddingTop: 64}}>\r\n            {children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}"]}