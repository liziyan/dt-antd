{"version":3,"sources":["../../src/SiderMenu/index.js"],"names":["Header","Layout","Sider","Content","SiderDemo","state","collapsed","path","menu","openKeys","selectedKeys","maxWidth","undefined","toggle","setState","getPageChange","width","document","body","offsetWidth","nextProps","nextState","props","theme","isTop","getUrl","siderMenu","that","window","onresize","location","href","split","filter","item","subMenus","indexOf","val","url","code","length","children","logo","title","pageHead","user","userName","userPhoto","logOut","userChange","userItem","other","menuProps","headerWidth","height","navTheme","handleOpen","bind","background","minHeight","paddingTop","padding","left","paddingLeft","contentWidth","innerWidth","React","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6CQA,M,GAA2BC,Y,CAA3BD,M;IAAQE,K,GAAmBD,Y,CAAnBC,K;IAAOC,O,GAAYF,Y,CAAZE,O;;IACFC,S;;;;;;;;;;;;;;4LACnBC,K,GAAQ;AACNC,iBAAW,KADL,EACY;AAClBC,YAAM,IAFA,EAEM;AACZC,YAAM,IAHA;AAINC,gBAAU,EAJJ,EAIQ;AACdC,oBAAc,EALR,EAKY;AAClBC,gBAAUC,SANJ,CAMe;AANf,K,QAYRC,M,GAAS,YAAM;AACb,YAAKC,QAAL,CAAc;AACZR,mBAAW,CAAC,MAAKD,KAAL,CAAWC;AADX,OAAd;AAGD,K,QAiCDS,a,GAAc,YAAI;AAChB,UAAIC,QAAQC,SAASC,IAAT,CAAcC,WAA1B;AACA,UAAGH,QAAQ,IAAR,IAAgB,MAAKX,KAAL,CAAWC,SAA9B,EAAyC;AACvC,cAAKQ,QAAL,CAAc;AACZR,qBAAW;AADC,SAAd;AAGD,OAJD,MAIO,IAAGU,SAAS,IAAT,IAAiB,CAAC,MAAKX,KAAL,CAAWC,SAAhC,EAA2C;AAChD,cAAKQ,QAAL,CAAc;AACZR,qBAAW;AADC,SAAd;AAGD;AACF,K;;AApDD;;;;;;;;;AAcA;;;;;;0CAMsBc,S,EAAWC,S,EAAW;AAC1C,UAAG,CAAC,mBAAG,uBAAO,KAAKC,KAAZ,CAAH,EAAuB,uBAAOF,SAAP,CAAvB,CAAD,IAA8C,EAAEA,UAAUG,KAAV,IAAmBH,UAAUG,KAAV,CAAgBC,KAArC,CAAjD,EAA8F;AAC5F,aAAKC,MAAL,CAAYL,UAAUM,SAAV,CAAoBlB,IAAhC;AACD;AACD,aAAO,CAAC,mBAAG,uBAAO,KAAKc,KAAZ,CAAH,EAAuB,uBAAOF,SAAP,CAAvB,CAAD,IAA8C,CAAC,mBAAG,uBAAO,KAAKf,KAAZ,CAAH,EAAsB,uBAAOgB,SAAP,CAAtB,CAAtD;AACD;AACD;;;;;;;wCAImB;AACjB,UAAIM,OAAO,IAAX;AACA,WAAKZ,aAAL;AACAa,aAAOC,QAAP,GAAkB,YAAU;AAC1BF,aAAKZ,aAAL;AACD,OAFD;AAGD;AACD;;;;;;;;AAgBA;;;;;;;;;;;;;;;;2BAgBOP,I,EAAK;AACV;AACA,UAAID,OAAOqB,OAAOE,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAX;AACA,UAAG,CAACzB,IAAD,IAASA,SAAS,GAArB,EAA0B;AAC1B;AACA,UAAIE,iBAAJ,CALU,CAKI;AACd,UAAIC,qBAAJ,CANU,CAMQ;AAClBF,cAAQA,KAAKyB,MAAL,CAAY,gBAAM;AACxBC,aAAKC,QAAL,IAAiBD,KAAKC,QAAL,CAAcF,MAAd,CAAqB,eAAK;AACzC,cAAG1B,KAAK6B,OAAL,CAAaC,IAAIC,GAAjB,IAAwB,CAAC,CAA5B,EAA8B;AAC5B7B,uBAAWyB,KAAKK,IAAhB;AACA7B,2BAAe2B,IAAIE,IAAnB;AACD;AACD,iBAAOF,GAAP;AACD,SANgB,CAAjB;AAOA,eAAOH,IAAP;AACD,OATO,CAAR;AAUA,WAAKpB,QAAL,CAAc;AACZL,0BADY;AAEZC;AAFY,OAAd;AAID;;;+BACUD,Q,EAAU;AACnB,WAAKK,QAAL,CAAc;AACZL,kBAAUA,SAASA,SAAS+B,MAAT,GAAkB,CAA3B;AADE,OAAd;AAGD;AACD;;;;;;;6BAIS;AAAA,mBAmBH,KAAKlB,KAnBF;AAAA,UAELmB,QAFK,UAELA,QAFK;AAAA,oCAGLf,SAHK;AAAA,UAIHgB,IAJG,oBAIHA,IAJG;AAAA,UAKHC,KALG,oBAKHA,KALG;AAAA,UAMHnC,IANG,oBAMHA,IANG;AAAA,mCAQLoC,QARK;AAAA,iDASHC,IATG;AAAA,UAUDC,QAVC,wBAUDA,QAVC;AAAA,UAWDC,SAXC,wBAWDA,SAXC;AAAA,UAYDC,MAZC,wBAYDA,MAZC;AAAA,UAaDC,UAbC,wBAaDA,UAbC;AAAA,UAcDC,QAdC,wBAcDA,QAdC;AAAA,UAgBHC,KAhBG,mBAgBHA,KAhBG;AAAA,UAkBL5B,KAlBK,UAkBLA,KAlBK;;AAoBPA,cAAQA,SAAS,EAAjB;AACA,UAAMC,QAAQD,SAASA,MAAMC,KAAf,IAAwB,KAAtC;AArBO,mBAsBqD,KAAKnB,KAtB1D;AAAA,UAsBAE,IAtBA,UAsBAA,IAtBA;AAAA,UAsBMG,YAtBN,UAsBMA,YAtBN;AAAA,UAsBoBJ,SAtBpB,UAsBoBA,SAtBpB;AAAA,UAsB+BG,QAtB/B,UAsB+BA,QAtB/B;AAAA,UAsByCE,QAtBzC,UAsByCA,QAtBzC;AAuBP;;AACA,UAAMyC,YAAY9C,YAAY,EAAZ,GAAiB,EAACG,UAAU,CAACA,QAAD,CAAX,EAAnC;AACA,UAAM4C,cAAc/C,YAAY,EAAZ,GAAiB,GAArC;AACA,aAAOkB,QACL;AAAC,oBAAD;AAAA,UAAQ,OAAO,EAAC8B,QAAQ,MAAT,EAAf;AACE;AAAA;AAAA,YAAK,sBAAmB/B,MAAMgC,QAAN,KAAmB,OAAnB,GAA6B,OAA7B,GAAuC,MAA1D,mBAAL;AACA;AAAA;AAAA;AACE;AADF;AAGE;AAAA;AAAA,gBAAK,WAAU,MAAf;AACE,4CAAC,cAAD,EAAc,EAACb,UAAD,EAAOC,YAAP,EAAcnB,YAAd,EAAqBD,YAArB,EAAd,CADF;AAEE;AAAA;AAAA;AACC,yBAAO,EAACZ,kBAAD;AADR;AAGE,8CAAC,cAAD,EAAa,EAACD,0BAAD,EAAe0C,oBAAf,EAA0B5C,UAA1B,EAAgCD,UAAhC,EAAsCiB,YAAtC,EAA6CD,YAA7C,EAAoDiC,YAAY,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAhE,EAAb;AAHF;AAFF,aAHF;AAWE,0CAAC,eAAD,EAAkB,EAACN,YAAD,EAAQD,kBAAR,EAAkBD,sBAAlB,EAA8BF,oBAA9B,EAAyCD,kBAAzC,EAAmDE,cAAnD,EAA2DzB,YAA3D,EAAlB;AAXF;AADA,SADF;AAgBA;AAAC,iBAAD;AAAA,YAAS,OAAO;AACdmC,0BAAY,SADE;AAEdC,yBAAW,GAFG;AAGdC,0BAAY;AAHE,aAAhB;AAKGnB;AALH;AAhBA,OADK,GA0BL;AAAC,oBAAD;AAAA,UAAQ,OAAO,EAACa,QAAQ,MAAT,EAAf;AACE;AAAC,eAAD;AAAA;AACE,qBAAS,IADX;AAEE,6BAFF;AAGE,mBAAO,GAHT;AAIE,uBAAWhD,SAJb;AAKE,wDAA0CiB,MAAMgC;AALlD;AAOE,wCAAC,cAAD,EAAc,EAACb,UAAD,EAAOC,YAAP,EAAcnB,YAAd,EAAqBD,YAArB,EAAd,CAPF;AAQE,wCAAC,cAAD,EAAa,EAACb,0BAAD,EAAe0C,oBAAf,EAA0B5C,UAA1B,EAAgCD,UAAhC,EAAsCiB,YAAtC,EAA6CD,YAA7C,EAAoDiC,YAAY,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAhE,EAAb;AARF,SADF;AAWE;AAAC,sBAAD;AAAA;AACE;AAAC,kBAAD;AAAA,cAAQ,WAAU,cAAlB,EAAiC,OAAO;AACtCC,4BAAY,MAD0B;AAEtCG,yBAAS,YAF6B;AAGtC7C,wCAAsBqC,WAAtB,QAHsC;AAItCS,sBAAST,WAAT;AAJsC,eAAxC;AAME,0CAAC,UAAD;AACE,yBAAU,SADZ;AAEE,oBAAM,KAAKhD,KAAL,CAAWC,SAAX,GAAuB,aAAvB,GAAuC,WAF/C;AAGE,uBAAS,KAAKO;AAHhB,cANF;AAWE,0CAAC,eAAD,EAAkB,EAACsC,YAAD,EAAQD,kBAAR,EAAkBD,sBAAlB,EAA8BF,oBAA9B,EAAyCD,kBAAzC,EAAmDE,cAAnD,EAA2DzB,YAA3D,EAAlB;AAXF,WADF;AAcE;AAAC,mBAAD;AAAA,cAAS,OAAO,EAACmC,YAAY,SAAb,EAAwBC,WAAW,GAAnC,EAAwCI,aAAgBV,WAAhB,OAAxC,EAAyEO,YAAY,EAArF,EAAhB;AACGnB;AADH;AAdF;AAXF,OA1BF;AAyDD;;;6CA9K+BnB,K,EAAO;AACrC,aAAO;AACLX,kBAAU,CAACW,MAAM0C,YAAN,KAAuB,OAAvB,GAAiC,IAAjC,GAAwCpC,OAAOqC,UAAhD,IAA8D,GAA9D,GAAoE,GAApE,GAA0E;AAD/E,OAAP;AAGD;;;;EAtBoCC,gBAAMC,S;;kBAAxB/D,S","file":"index.js","sourcesContent":["import React from 'react';\r\nimport { is, fromJS } from 'immutable';\r\nimport { Layout, Icon, } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './index.less';\r\nimport HeadLogo from './logo';\r\nimport NavMenu from './menu';\r\nimport RightContent from './right';\r\n/**\r\n * 整体框架组件，结构：左上下模式，左边分title和菜单，上边分左(收起展开按钮)和右(登陆员信息)\r\n * @author: 雏田\r\n * @time: 2018-09-18\r\n * 调用方法：\r\n * import {PageLayout} from 'DT-antd';\r\n * const path = {\r\n *   children,    // 【必填】 框架的中间部分 \r\n *   siderMenu: { // 【必填】 框架的左边部分\r\n *     logo,      // 【选填】 左侧头部logo，默认为公交云logo\r\n *     title,     // 【必填】 左侧头部文字\r\n *     menu,      // 【必填】 左侧菜单栏数据，有固定格式，固定格式见最上面组件说明\r\n *   },\r\n *   pageHead: {      // 【必填】 顶部分的参数       \r\n *     user: {        // 【必填】 最右侧用户头像+用户名+下拉部分的参数（如果启用了userChange则选填）\r\n *       userName,    // 【必填】 用户名（如果启用了userChange则选填）\r\n *       userPhoto,   // 【选填】 用户头像\r\n *       logOut,      // 【必填】 退出登陆的回调方法，下拉菜单默认只有一个退出登陆（如果启用了userItem则选填）\r\n *       userChange,  // 【选填】 object,不满足用户名+头像模式的自定义书写\r\n *       userItem,    // 【选填】 object，不满足只有退出登陆的下拉  菜单模式而自定义书写\r\n *     },\r\n *     other, // 【选填】 头部右边默认只有一个头像+用户名，要加其它东西在这里自定义书写，会累加\r\n *   },\r\n *   theme: {  // 主题\r\n *     navTheme: 'light', // 主题颜色，白色light和深色dark，默认dark\r\n *     isTop: true, // 导航是否显示在头部,默认显示在左边\r\n *   }, \r\n * }\r\n * <PageLayout {...path} />\r\n *\r\n * 其中左侧菜单栏为了兼容主数据已定的返回模式，如果返回格式不一致，请对数据重新处理为以下格式：\r\n * let menu = [{\r\n *    code: 'userManage', // 识别的主键，不能重复\r\n *    name: '用户管理', // 标题\r\n *    icon: 'user', // 图标\r\n *    subMenus: [{ // 二级菜单目录\r\n *      code: 'userManage.userManage', // 一级主键.二级主键\r\n *      name: '用户列表', // 标题\r\n *      url: '/userManage' // 访问的路由路径，为了兼容主数据，要有/\r\n *    }]\r\n *  }];\r\n *\r\n * 另外为了方便页面指向左侧菜单的选中和展开，在定义页面其它路由时,如新增编辑详情等，页面路由定义格式为：\r\n * {对应父级的path[也就是菜单栏menu中的url字段]}/你要定义的路由(如新增add，编辑edit/:id,详情detail/:id等)\r\n */\r\nconst { Header, Sider, Content } = Layout;\r\nexport default class SiderDemo extends React.Component {\r\n  state = {\r\n    collapsed: false, // 左侧是否缩小\r\n    path: null, // 当前路由    \r\n    menu: null,\r\n    openKeys: '', // 展开的key\r\n    selectedKeys: '', // 选中的Key\r\n    maxWidth: undefined, // isTop时导航的最大宽度\r\n  };  \r\n  /**\r\n   * [点击展开或缩小左侧的事件]\r\n   * @return {[type]} [description]\r\n   */\r\n  toggle = () => {   \r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n  static getDerivedStateFromProps(props) {\r\n    return {\r\n      maxWidth: (props.contentWidth === 'Fixed' ? 1200 : window.innerWidth) - 280 - 165 - 40,\r\n    };\r\n  }\r\n  /**\r\n   * [shouldComponentUpdate 如果state值没有改变时就算调用了setState方法，页面也不会重新渲染]\r\n   * @param  {[type]} nextProps [description]\r\n   * @param  {[type]} nextState [description]\r\n   * @return {[type]}           [description]\r\n   */\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(!is(fromJS(this.props), fromJS(nextProps)) && !(nextProps.theme && nextProps.theme.isTop)) {\r\n      this.getUrl(nextProps.siderMenu.menu);\r\n    }    \r\n    return !is(fromJS(this.props), fromJS(nextProps)) || !is(fromJS(this.state),fromJS(nextState))\r\n  }\r\n  /**\r\n   * [componentDidMount 加载render方法之前]\r\n   * @return {[type]} [description]\r\n   */\r\n  componentDidMount(){\r\n    let that = this;   \r\n    this.getPageChange();\r\n    window.onresize = function(){\r\n      that.getPageChange();\r\n    };\r\n  }\r\n  /**\r\n   * [获取窗体的改变]\r\n   * @return {[type]} [description]\r\n   */\r\n  getPageChange=()=>{\r\n    let width = document.body.offsetWidth;\r\n    if(width > 1366 && this.state.collapsed) {\r\n      this.setState({\r\n        collapsed: false\r\n      })\r\n    } else if(width <= 1366 && !this.state.collapsed) {\r\n      this.setState({\r\n        collapsed: true\r\n      })\r\n    }\r\n  }\r\n  /**\r\n   * [getUrl 获取当前url的路由地址，常用于浏览器返回箭之后的左侧菜单选中效果]\r\n   * 说明：\r\n   * 目前框架是按照主数据的返回菜单来定义的，主数据的菜单格式请看mockdata里的模拟数据格式\r\n   * 菜单选中方式获取步骤如下：\r\n   * 1. 获取url的路由path\r\n   * 2. 和menu做比较，得到url字段中含有path的code来选中左侧效果\r\n   * 3. 获得最外层的code来展开一级目录。\r\n   *\r\n   * 所以，在定义路由时，要按照数据库返回的数据格式来定义。比如：\r\n   * 1. 用户列表的路由为：/userManage\r\n   * 2. 那他对应下的详情则应该为：/userManage/detail/:id\r\n   * 3. 对应下的新增则应该为：/userManage/add\r\n   *\r\n   * 只有这样定义，才能保证左侧菜单的展开和选中是一一对应的\r\n   */\r\n  getUrl(menu){    \r\n    // 获取当前路由\r\n    let path = window.location.href.split('#')[1];    \r\n    if(!path || path === '/') return;\r\n    // 根据path获取menu对应的item    \r\n    let openKeys; // 展开的一级key   \r\n    let selectedKeys; // 选中的二级key\r\n    menu && menu.filter(item=>{     \r\n      item.subMenus && item.subMenus.filter(val=>{ \r\n        if(path.indexOf(val.url) > -1){\r\n          openKeys = item.code; \r\n          selectedKeys = val.code;\r\n        }     \r\n        return val;\r\n      });\r\n      return item;\r\n    });    \r\n    this.setState({\r\n      openKeys,\r\n      selectedKeys\r\n    });\r\n  }\r\n  handleOpen(openKeys) {\r\n    this.setState({\r\n      openKeys: openKeys[openKeys.length - 1],\r\n    })\r\n  }\r\n  /**\r\n   * [render description]\r\n   * @return {[type]} [description]\r\n   */\r\n  render() {\r\n    let {\r\n      children, // 框架的中间部分（必填） \r\n      siderMenu: { // 框架的左边部分\r\n        logo, // 左侧头部logo，默认为公交云logo\r\n        title,// 左侧头部文字（必填）\r\n        menu, // 左侧菜单栏数据，有固定格式，固定格式见最上面组件说明（必填）\r\n      },\r\n      pageHead: { // 顶部分的参数       \r\n        user: { // 最右侧用户头像+用户名+下拉部分的参数\r\n          userName, // 用户名(必填)\r\n          userPhoto, // 用户头像\r\n          logOut, // 退出登陆的回调方法(必填)，下拉菜单默认只有一个退出登陆\r\n          userChange, // object,不满足用户名+头像模式的自定义书写\r\n          userItem, // object，不满足只有退出登陆的下拉菜单模式而自定义书写\r\n        },\r\n        other, // 头部右边默认只有一个头像+用户名，要加其它东西在这里自定义书写，会累加\r\n      },     \r\n      theme, // 主题\r\n    } = this.props; \r\n    theme = theme || {};\r\n    const isTop = theme && theme.isTop || false;\r\n    const {path, selectedKeys, collapsed, openKeys, maxWidth} = this.state;   \r\n    // 如果初始或者切换时是隐藏模式，则不选中当前选中的key\r\n    const menuProps = collapsed ? {} : {openKeys: [openKeys]};\r\n    const headerWidth = collapsed ? 80 : 256;   \r\n    return isTop ? (\r\n      <Layout style={{height: '100%'}}>\r\n        <div className={`head ${theme.navTheme === 'light' ? 'light' : 'dark'} layoutHeader`}>\r\n        <div         \r\n          className={`main`}\r\n        >\r\n          <div className='left'>\r\n            <HeadLogo {...{logo, title, isTop, theme}} />\r\n            <div\r\n             style={{maxWidth}}\r\n            >\r\n              <NavMenu {...{selectedKeys, menuProps, menu, path, isTop, theme, handleOpen: this.handleOpen.bind(this)}} />\r\n            </div>\r\n          </div>          \r\n          <RightContent {...{other, userItem, userChange, userPhoto, userName, logOut, theme}} />\r\n        </div>\r\n      </div>\r\n      <Content style={{\r\n        background: '#f5f5f5',\r\n        minHeight: 280,\r\n        paddingTop: 64,\r\n      }}>\r\n        {children}\r\n      </Content>\r\n      </Layout>\r\n    ) : (\r\n      <Layout style={{height: '100%'}}>\r\n        <Sider\r\n          trigger={null}\r\n          collapsible\r\n          width={256}\r\n          collapsed={collapsed}\r\n          className={`navSider fixSiderbar scroll ${theme.navTheme}`}\r\n        >\r\n          <HeadLogo {...{logo, title, isTop, theme}} />\r\n          <NavMenu {...{selectedKeys, menuProps, menu, path, isTop, theme, handleOpen: this.handleOpen.bind(this)}} />\r\n        </Sider>\r\n        <Layout>\r\n          <Header className=\"layoutHeader\" style={{\r\n            background: '#fff',\r\n            padding: '0 12px 0 0',\r\n            width: `calc(100% - ${headerWidth}px)`,\r\n            left: `${headerWidth}px`, \r\n          }}>\r\n            <Icon\r\n              className=\"trigger\"\r\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n              onClick={this.toggle}\r\n            />\r\n            <RightContent {...{other, userItem, userChange, userPhoto, userName, logOut, theme}} />\r\n          </Header>\r\n          <Content style={{background: '#f5f5f5', minHeight: 280, paddingLeft: `${headerWidth}px`, paddingTop: 64}}>\r\n            {children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}"]}