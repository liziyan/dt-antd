{"version":3,"sources":["../../src/standardTable/index.js"],"names":["initTotalList","columns","totalList","forEach","column","needTotal","push","total","StandardTable","props","needTotalList","state","selectedRowKeys","data","list","pagination","loading","rowKey","noCheck","selectBtns","scroll","footer","tableList","map","item","scrollDisplayName","scrollDisplay","paginationProps","showSizeChanger","showQuickJumper","showTotal","pageSizeOptions","rowSelection","onChange","handleRowSelectChange","getCheckboxProps","disabled","record","readOnly","fontWeight","length","marginLeft","dataIndex","title","render","cleanSelectedKeys","index","judgeShow","callBack","handleTableChange","nextProps","selectedRows","PureComponent","onSelectRow","reduce","sum","val","parseFloat","setState","filters","sorter"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\r\nimport { Table, Alert } from 'antd';\r\nimport './index.less';\r\n/**\r\n * @describe： 列表表格的公用组件。直接取用的ant-design-pro的封装组件，代码注释后期有时间加上\r\n * @author: ant-design-pro\r\n * @update:2018-08-20 新增noCheck参数，true表示不显示勾选框\r\n *                    修改勾选框的disabled为readOnly,因为和后台的字段冲突\r\n * @update:2018-08-22 新增scroll参与，用于表格的固定显示\r\n * @updata:2018-08-24 新增footer，用于页脚的显示\r\n */\r\nfunction initTotalList(columns) {\r\n  const totalList = [];\r\n  columns.forEach(column => {\r\n    if (column.needTotal) {\r\n      totalList.push({ ...column, total: 0 });\r\n    }\r\n  });\r\n  return totalList;\r\n}\r\n\r\nclass StandardTable extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    const { columns } = props;\r\n    const needTotalList = initTotalList(columns);\r\n\r\n    this.state = {\r\n      selectedRowKeys: [],\r\n      needTotalList,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps (nextProps, state) {\r\n    if (nextProps.selectedRows && nextProps.selectedRows.length === 0) {\r\n      const needTotalList = initTotalList(nextProps.columns);\r\n      return{\r\n        selectedRowKeys: [],\r\n        needTotalList,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleRowSelectChange = (selectedRowKeys, selectedRows) => {\r\n    const { needTotalList: list } = this.state;\r\n    const { onSelectRow } = this.props;\r\n    let needTotalList = [...list];\r\n    needTotalList = needTotalList.map(item => {\r\n      return {\r\n        ...item,\r\n        total: selectedRows.reduce((sum, val) => {\r\n          return sum + parseFloat(val[item.dataIndex], 10);\r\n        }, 0),\r\n      };\r\n    });\r\n\r\n    if (onSelectRow) {\r\n      onSelectRow(selectedRows);\r\n    }\r\n\r\n    this.setState({ selectedRowKeys, needTotalList });\r\n  };\r\n\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const { onChange } = this.props;\r\n    onChange(pagination, filters, sorter);\r\n  };\r\n  cleanSelectedKeys = () => {\r\n    this.handleRowSelectChange([], []);\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys, needTotalList } = this.state;\r\n    const {\r\n      data: { list, pagination },\r\n      loading,\r\n      columns,\r\n      rowKey,\r\n      noCheck,\r\n      selectBtns,\r\n      scroll,\r\n      footer,\r\n    } = this.props;  \r\n    let tableList;\r\n    if(!!list){\r\n      tableList = list.map(item=> {\r\n        item.scrollDisplayName = item.scrollDisplay ? \"是\" : \"否\";\r\n        return {\r\n          ...item\r\n        };\r\n      }); \r\n    }\r\n    const paginationProps = {\r\n      showSizeChanger: true,\r\n      showQuickJumper: true,\r\n      showTotal: (total) => `共${total}条`, \r\n      // hideOnSinglePage: true,//只有一页时隐藏分页器\r\n      pageSizeOptions: [\"10\",\"25\",\"50\",\"100\"],\r\n      ...pagination,\r\n    };\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.handleRowSelectChange,\r\n      getCheckboxProps: record => {        \r\n        return({\r\n        disabled: record.readOnly,\r\n      })},\r\n    };\r\n\r\n    return (\r\n      <div className='standardTable'>\r\n        {\r\n          !noCheck && (<div className='tableAlert'>\r\n            <Alert\r\n              message={\r\n                <Fragment>\r\n                  已选择 <a style={{ fontWeight: 600 }}>{selectedRowKeys.length}</a> 项&nbsp;&nbsp;\r\n                  {needTotalList.map(item => (\r\n                    <span style={{ marginLeft: 8 }} key={item.dataIndex}>\r\n                      {item.title}\r\n                      总计&nbsp;\r\n                      <span style={{ fontWeight: 600 }}>\r\n                        {item.render ? item.render(item.total) : item.total}\r\n                      </span>\r\n                    </span>\r\n                  ))}\r\n                  <a onClick={this.cleanSelectedKeys} style={{ marginLeft: 24 }}>\r\n                    清空\r\n                  </a>\r\n                  {\r\n                    selectBtns && selectBtns.map((item,index) => {\r\n                      if((item.judgeShow && selectedRowKeys.length>0) || !item.judgeShow) {\r\n                        return (\r\n                          <a key={index} onClick={item.callBack} style={{marginLeft: 24}}>\r\n                            {item.title}\r\n                          </a>)                        \r\n                      } else return ''\r\n                    })\r\n                  }\r\n                </Fragment>\r\n              }\r\n              type=\"info\"\r\n              showIcon\r\n            />\r\n          </div>)\r\n        }\r\n        {\r\n          noCheck ? (<Table\r\n            loading={loading}\r\n            rowKey={rowKey || 'key'} \r\n            dataSource={tableList}\r\n            columns={columns}\r\n            pagination={paginationProps}\r\n            onChange={this.handleTableChange}\r\n            footer={footer}\r\n            scroll={scroll}\r\n          />) : (<Table\r\n            loading={loading}\r\n            rowKey={rowKey || 'key'}                \r\n            rowSelection={rowSelection}\r\n            dataSource={tableList}\r\n            columns={columns}\r\n            pagination={paginationProps}\r\n            footer={footer}\r\n            onChange={this.handleTableChange}\r\n            scroll={scroll}\r\n          />)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StandardTable;\r\n"]}