{"version":3,"sources":["../../src/uploadImage/small.js"],"names":["TableDrawer","state","previewVisible","previewImage","fileList","loading","picName","hasRemoved","handleCancel","setState","handlePreview","file","url","thumbUrl","handleRemove","props","handleUploadImg","isLt2M","size","message","error","nextProps","nextState","uploadButton","res","success","list","uid","name","status","data","info","width","prevState","imageUrl","React","Component"],"mappings":"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","file":"small.js","sourcesContent":["/**\r\n * @title: 表单中上传图片的公用组件，只支持上传一张，且是“困”模式的上传\r\n * @author: 雏田\r\n * @version: 1.0.0\r\n * @time: 2018-08-17\r\n * @param {[string]}      [url]           [上传的api路径]\r\n * @param {[string]}      [name]          [form表单中的name]\r\n * @param {[string]}      [imageUrl]      [默认图片,常用于编辑]\r\n * @param {[function]}    [uploadImage]   [上传成功的回调函数，可不填]\r\n  * 调用方法（含formItem的图片校验方法）：\r\n  * <FormItem {...formItemLayout} label='广告图片' extra='推荐尺寸750*150'>\r\n      {getFieldDecorator('pic', {\r\n        rules: [{\r\n          validator: (rule, value, callback)=>{\r\n            let hasPic = this.state.hasPic;\r\n            if(!hasPic){\r\n              callback('请上传图片');\r\n            }\r\n            callback();\r\n          },                   \r\n        }],\r\n      })(\r\n        <UploadImage\r\n          url='//jsonplaceholder.typicode.com/posts/'\r\n          name='pic'\r\n          imageUrl={defaultValues && defaultValues.pic || ''}\r\n          uploadImage= {(imageUrl)=>{\r\n            this.setState({\r\n              hasPic: imageUrl\r\n            }) \r\n          }}\r\n        />                \r\n      )}\r\n    </FormItem>\r\n */\r\nimport React from 'react';\r\nimport { \r\n  message,\r\n  Icon,\r\n  Upload,\r\n  Button,\r\n  Modal,\r\n} from 'antd';\r\nimport { is, fromJS } from 'immutable';\r\n\r\nexport default class TableDrawer extends React.Component {  \r\n  state = {\r\n    previewVisible: false, // 是否显示大图\r\n    previewImage: '', // 大图的地址\r\n    fileList: [], // 显示的缩略图地址\r\n    loading: false,\r\n    picName: '',\r\n    hasRemoved: false,\r\n  };\r\n  /**\r\n   * [beforeUpload 判断上传图片]\r\n   * @param  {[type]} file [description]\r\n   * @return {[type]}      [description]\r\n   */\r\n  beforeUpload(file) {    \r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('图片太大超过2MB啦!');\r\n    }\r\n    return isLt2M;\r\n  }\r\n  /**\r\n   * [关闭缩略图]\r\n   * @return {[type]} [description]\r\n   */\r\n  handleCancel = () => this.setState({previewVisible: false})\r\n  /**\r\n   * [查看大图]\r\n   * @param  {[type]} file [description]\r\n   */\r\n  handlePreview = (file) => {\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  }\r\n  /**\r\n   * [删除照片]\r\n   */\r\n  handleRemove= () => {\r\n    this.setState({\r\n      fileList: [],\r\n      hasRemoved: true,\r\n    });    \r\n    this.props.handleUploadImg();\r\n  }  \r\n  /**\r\n   * [getDerivedStateFromProps 父组件传参数进来改变子组件]\r\n   * @param  {[type]} nextProps [description]\r\n   * @param  {[type]} prevState [description]\r\n   * @return {[type]}           [description]\r\n   */\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if(nextProps.imageUrl && !prevState.imageUrl && !prevState.hasRemoved) {\r\n      let list=[{\r\n        uid: -1,\r\n        name: '',\r\n        status: 'done',\r\n        url: nextProps.imageUrl,\r\n      }];\r\n      // 这一步相当于执行this.setState({fileList: list})\r\n      return {\r\n        fileList: list\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * [shouldComponentUpdate 如果state值没有改变时就算调用了setState方法，页面也不会重新渲染]\r\n   * @param  {[type]} nextProps [description]\r\n   * @param  {[type]} nextState [description]\r\n   * @return {[type]}           [description]\r\n   */\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return !is(fromJS(this.props), fromJS(nextProps)) || !is(fromJS(this.state),fromJS(nextState))\r\n  } \r\n  /**\r\n   * [render description]\r\n   * @return {[type]} [description]\r\n   */\r\n  render() {\r\n    const {previewVisible, previewImage, fileList} = this.state;\r\n    const {url}=this.props;\r\n    const uploadButton = (\r\n      <Button>\r\n        <Icon type={this.state.loading ? 'loading' : 'upload'} />\r\n        {this.state.loading ? '上传中...' : '上传图片'}\r\n      </Button> \r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action={url}\r\n          listType='picture'\r\n          accept='image/png,image/jpg,image/jpeg,image/bmp'\r\n          fileList={fileList}\r\n          withCredentials={true}\r\n          onSuccess={(res)=>{\r\n            if (res.success) {\r\n              let list=[{\r\n                uid: -1,\r\n                name: this.state.picName,\r\n                status: 'done',\r\n                url: res.data,\r\n              }];\r\n              this.setState({\r\n                fileList: list,\r\n                loading: false,                \r\n              });\r\n              this.props.handleUploadImg(res.data);\r\n            } else {\r\n              message.error(res.message);\r\n            }\r\n          }}\r\n          onPreview={this.handlePreview}\r\n          onRemove={this.handleRemove}\r\n          onChange={(info)=>{\r\n            this.setState({               \r\n              loading: true,\r\n              picName: info.file.name,               \r\n            });\r\n          }}\r\n        >\r\n         {uploadButton}\r\n        </Upload>\r\n        <Modal visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{width: '100%'}} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}"]}